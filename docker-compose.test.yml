version: '3.8'

# Test compose file for running platform-registration-service in Docker
# Assumes devservices infrastructure is already running on pipeline-test-network

networks:
  pipeline-test-network:
    external: true

services:
  platform-registration-service:
    image: git.rokkon.com/io-pipeline/platform-registration-service:latest
    container_name: platform-registration-test
    networks:
      - pipeline-test-network
    ports:
      - "38101:8080"
    environment:
      # HTTP Configuration
      QUARKUS_HTTP_PORT: "8080"
      
      # Database
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:mysql://pipeline-mysql:3306/pipeline"
      QUARKUS_DATASOURCE_USERNAME: "pipeline"
      QUARKUS_DATASOURCE_PASSWORD: "password"
      QUARKUS_DATASOURCE_REACTIVE_URL: "mysql://pipeline-mysql:3306/pipeline"
      
      # Consul
      PIPELINE_CONSUL_HOST: "pipeline-consul"
      PIPELINE_CONSUL_PORT: "8500"
      
      # Kafka
      KAFKA_BOOTSTRAP_SERVERS: "pipeline-kafka:9092"
      
      # Apicurio Registry
      MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_APICURIO_REGISTRY_URL: "http://pipeline-apicurio-registry:8080/apis/registry/v3"
      
      # Logging
      QUARKUS_LOG_LEVEL: "INFO"
      QUARKUS_LOG_CATEGORY_IO_PIPELINE_LEVEL: "DEBUG"
      
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/q/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

